name: CI/CD

on:
  push:
    branches:
      - main
jobs:
  func-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Define ENV VARS
        id: define_env
        run:  |
          echo "REPO"=$(echo "$GITHUB_REPOSITORY" | awk '{print tolower($1)}' | sed -e "s/:refs//") >> $GITHUB_ENV && \
          echo "IMAGE"=$(echo "ghcr.io/$GITHUB_REPOSITORY" | awk '{print tolower($1)}' | sed -e "s/:refs//") >> $GITHUB_ENV
      - name: Docker meta
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: name/app
      - name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Pull template
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: template store pull python3-debian
      - name: Run shrinkwrap build
        uses: docker://openfaas/faas-cli:latest-root
        with:
          args: build --shrinkwrap
      - name: Build and Push the OpenFaaS function
        uses: docker/build-push-action@v2
        with:
          context: ./build/linpack/
          file: ./build/linpack/Dockerfile
          push: true
          cache-from: type=registry,ref=${{ env.IMAGE }}:latest
          # platforms: linux/amd64,linux/arm/v7,linux/arm64
          labels: ${{ steps.docker_meta.outputs.labels }}
          tags: |
            ${{ env.IMAGE }}:latest-${{ github.sha }}
            ${{ env.IMAGE }}:latest
